%!PS-Adobe-2.0 EPSF-2.0
%%Title: sfdat1.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Wed Mar 29 16:07:04 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 3 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sfdat1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (weiss)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 29 16:07:04 2017)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
774 756 M
63 0 V
5948 0 R
-63 0 V
stroke
666 756 M
[ [(Times-Roman) 180.0 0.0 true true 0 (10)]
[(Times-Roman) 144.0 90.0 true true 0 (-5)]
] -78.0 MRshow
1.000 UL
LTb
774 756 M
31 0 V
5980 0 R
-31 0 V
774 1062 M
31 0 V
5980 0 R
-31 0 V
774 1241 M
31 0 V
5980 0 R
-31 0 V
774 1368 M
31 0 V
5980 0 R
-31 0 V
774 1467 M
31 0 V
5980 0 R
-31 0 V
774 1547 M
31 0 V
5980 0 R
-31 0 V
774 1615 M
31 0 V
5980 0 R
-31 0 V
774 1674 M
31 0 V
5980 0 R
-31 0 V
774 1726 M
31 0 V
5980 0 R
-31 0 V
774 1773 M
63 0 V
5948 0 R
-63 0 V
stroke
666 1773 M
[ [(Times-Roman) 180.0 0.0 true true 0 (10)]
[(Times-Roman) 144.0 90.0 true true 0 (-4)]
] -78.0 MRshow
1.000 UL
LTb
774 1773 M
31 0 V
5980 0 R
-31 0 V
774 2079 M
31 0 V
5980 0 R
-31 0 V
774 2258 M
31 0 V
5980 0 R
-31 0 V
774 2385 M
31 0 V
5980 0 R
-31 0 V
774 2483 M
31 0 V
5980 0 R
-31 0 V
774 2564 M
31 0 V
5980 0 R
-31 0 V
774 2632 M
31 0 V
5980 0 R
-31 0 V
774 2691 M
31 0 V
5980 0 R
-31 0 V
774 2743 M
31 0 V
5980 0 R
-31 0 V
774 2790 M
63 0 V
5948 0 R
-63 0 V
stroke
666 2790 M
[ [(Times-Roman) 180.0 0.0 true true 0 (10)]
[(Times-Roman) 144.0 90.0 true true 0 (-3)]
] -78.0 MRshow
1.000 UL
LTb
774 2790 M
31 0 V
5980 0 R
-31 0 V
774 3096 M
31 0 V
5980 0 R
-31 0 V
774 3275 M
31 0 V
5980 0 R
-31 0 V
774 3402 M
31 0 V
5980 0 R
-31 0 V
774 3500 M
31 0 V
5980 0 R
-31 0 V
774 3581 M
31 0 V
5980 0 R
-31 0 V
774 3649 M
31 0 V
5980 0 R
-31 0 V
774 3708 M
31 0 V
5980 0 R
-31 0 V
774 3760 M
31 0 V
5980 0 R
-31 0 V
774 3806 M
63 0 V
5948 0 R
-63 0 V
stroke
666 3806 M
[ [(Times-Roman) 180.0 0.0 true true 0 (10)]
[(Times-Roman) 144.0 90.0 true true 0 (-2)]
] -78.0 MRshow
1.000 UL
LTb
774 3806 M
31 0 V
5980 0 R
-31 0 V
774 4112 M
31 0 V
5980 0 R
-31 0 V
774 4291 M
31 0 V
5980 0 R
-31 0 V
774 4418 M
31 0 V
5980 0 R
-31 0 V
774 4517 M
31 0 V
5980 0 R
-31 0 V
774 4597 M
31 0 V
5980 0 R
-31 0 V
774 4666 M
31 0 V
5980 0 R
-31 0 V
774 4724 M
31 0 V
5980 0 R
-31 0 V
774 4776 M
31 0 V
5980 0 R
-31 0 V
774 4823 M
63 0 V
5948 0 R
-63 0 V
stroke
666 4823 M
[ [(Times-Roman) 180.0 0.0 true true 0 (10)]
[(Times-Roman) 144.0 90.0 true true 0 (-1)]
] -78.0 MRshow
1.000 UL
LTb
774 4823 M
31 0 V
5980 0 R
-31 0 V
774 756 M
0 94 V
0 3973 R
0 -94 V
stroke
774 576 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MCshow
1.000 UL
LTb
774 756 M
0 47 V
0 4020 R
0 -47 V
1679 756 M
0 47 V
0 4020 R
0 -47 V
2208 756 M
0 47 V
0 4020 R
0 -47 V
2583 756 M
0 47 V
0 4020 R
0 -47 V
2875 756 M
0 47 V
0 4020 R
0 -47 V
3113 756 M
0 47 V
0 4020 R
0 -47 V
3314 756 M
0 47 V
0 4020 R
0 -47 V
3488 756 M
0 47 V
0 4020 R
0 -47 V
3642 756 M
0 47 V
0 4020 R
0 -47 V
3779 756 M
0 94 V
0 3973 R
0 -94 V
stroke
3779 576 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
1.000 UL
LTb
3779 756 M
0 47 V
0 4020 R
0 -47 V
4684 756 M
0 47 V
0 4020 R
0 -47 V
5213 756 M
0 47 V
0 4020 R
0 -47 V
5589 756 M
0 47 V
0 4020 R
0 -47 V
5880 756 M
0 47 V
0 4020 R
0 -47 V
6118 756 M
0 47 V
0 4020 R
0 -47 V
6319 756 M
0 47 V
0 4020 R
0 -47 V
6494 756 M
0 47 V
0 4020 R
0 -47 V
6647 756 M
0 47 V
0 4020 R
0 -47 V
6785 756 M
0 94 V
0 3973 R
0 -94 V
stroke
6785 576 M
[ [(Times-Roman) 180.0 0.0 true true 0 ( 1)]
] -60.0 MCshow
1.000 UL
LTb
6785 756 M
0 47 V
0 4020 R
0 -47 V
stroke
774 4823 N
774 756 L
6011 0 V
0 4067 V
-6011 0 V
Z stroke
LCb setrgbcolor
144 2789 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Italic) 180.0 0.0 true true 0 (F)]
[(Times-Roman) 144.0 -54.0 true true 0 (2)]
[(Times-Italic) 144.0 -54.0 true true 0 (A)]
[(Times-Roman) 180.0 0.0 true true 0 ( \(charm\))]
] -42.0 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3779 306 M
[ [(Times-Italic) 180.0 0.0 true true 0 (x)]
[(Times-Roman) 144.0 -54.0 true true 0 (B)]
] -42.0 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
4684 3581 M
[ [(Times-Italic) 180.0 0.0 true true 0 (Q)]
[(Times-Roman) 144.0 90.0 true true 0 (2)]
[(Times-Roman) 180.0 0.0 true true 0 ( = 34)]
] -78.0 MLshow
4684 3096 M
[ [(Times-Roman) 180.0 0.0 true true 0 (16)]
] -60.0 MLshow
4684 2385 M
[ [(Times-Roman) 180.0 0.0 true true 0 (7)]
] -60.0 MLshow
4684 1062 M
[ [(Times-Roman) 180.0 0.0 true true 0 (3)]
] -60.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
5966 4643 M
[ [(Times-Roman) 180.0 0.0 true true 0 (Pseudodata error)]
] -60.0 MRshow
LT0
LC0 setrgbcolor
6074 4643 M
495 0 V
-495 31 R
0 -62 V
495 62 R
0 -62 V
1135 3610 M
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -304 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -371 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -485 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -697 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
4140 1067 M
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
1135 4053 M
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -256 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -299 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -364 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -472 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -674 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
1736 4233 M
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -263 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -309 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -381 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -503 R
0 88 V
-31 -88 R
62 0 V
stroke 4171 3133 M
-62 88 R
62 0 V
2337 4320 M
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -281 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
570 -338 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
570 -430 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
1135 3656 Pls
1736 3440 Pls
2337 3157 Pls
2938 2761 Pls
3539 2153 Pls
4140 1114 Pls
1135 4099 Pls
1736 3932 Pls
2337 3722 Pls
2938 3446 Pls
3539 3064 Pls
4140 2478 Pls
1736 4280 Pls
2337 4106 Pls
2938 3886 Pls
3539 3594 Pls
4140 3179 Pls
2337 4366 Pls
2938 4173 Pls
3539 3924 Pls
4140 3583 Pls
6321 4643 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT0
LC2 setrgbcolor
LCb setrgbcolor
5966 4409 M
[ [(Times-Roman) 180.0 0.0 true true 0 (Hessian error)]
] -60.0 MRshow
LT0
LC2 setrgbcolor
6074 4409 M
495 0 V
-495 31 R
0 -62 V
495 62 R
0 -62 V
1185 3639 M
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
570 -252 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
570 -331 R
0 57 V
-31 -57 R
62 0 V
-62 57 R
62 0 V
570 -481 R
0 107 V
-31 -107 R
62 0 V
-62 107 R
62 0 V
570 -770 R
0 200 V
-31 -200 R
62 0 V
-62 200 R
62 0 V
4190 933 M
0 309 V
4159 933 M
62 0 V
-62 309 R
62 0 V
1185 4086 M
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
570 -196 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
570 -246 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
570 -321 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
570 -463 R
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
570 -739 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
1786 4266 M
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
570 -205 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
570 -257 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
570 -342 R
0 60 V
-31 -60 R
62 0 V
-62 60 R
62 0 V
570 -506 R
0 117 V
-31 -117 R
62 0 V
stroke 4221 3117 M
-62 117 R
62 0 V
2387 4350 M
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
570 -226 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
570 -291 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
570 -406 R
0 82 V
-31 -82 R
62 0 V
-62 82 R
62 0 V
1185 3656 Crs
1786 3440 Crs
2387 3157 Crs
2988 2761 Crs
3589 2153 Crs
4190 1114 Crs
1185 4099 Crs
1786 3932 Crs
2387 3722 Crs
2988 3446 Crs
3589 3064 Crs
4190 2478 Crs
1786 4280 Crs
2387 4106 Crs
2988 3886 Crs
3589 3594 Crs
4190 3179 Crs
2387 4366 Crs
2988 4173 Crs
3589 3924 Crs
4190 3583 Crs
6321 4409 Crs
% End plot #2
1.000 UL
LTb
774 4823 N
774 756 L
6011 0 V
0 4067 V
-6011 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Times-Roman
